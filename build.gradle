
buildscript {
    ext {
        springBootVersion = '2.5.2'
        wrapperVersion = '1.0.27.RELEASE'
        shadowVersion = '5.2.0'
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
//        classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:${wrapperVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE")
    }
}


plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

//group = 'com.aws'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '1.8'
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
//    implementation 'com.amazonaws:aws-lambda-java-events:3.9.0'
//    implementation 'org.springframework.cloud:spring-cloud-starter-function-webflux:3.1.3'
//    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws:3.1.3'
////    compile "org.springframework.cloud:spring-cloud-function-adapter-aws:3.1.3"
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-ws:1.4.7.RELEASE'
//    implementation 'mysql:mysql-connector-java:8.0.24'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//}
//
//apply plugin: 'com.github.johnrengelman.shadow'
//
//assemble.dependsOn = [shadowJar]
//import com.github.jengelman.gradle.plugins.shadow.transformers.*
//shadowJar {
//    classifier = 'aws'
//    dependencies {
//        exclude(
//                dependency("org.springframework.cloud:spring-cloud-function-web:3.1.3"))
//    }
//    // Required for Spring
//    mergeServiceFiles()
//    append 'META-INF/spring.handlers'
//    append 'META-INF/spring.schemas'
//    append 'META-INF/spring.tooling'
//    transform(PropertiesFileTransformer) {
//        paths = ['META-INF/spring.factories']
//        mergeStrategy = "append"
//    }
//}
//
//configurations {
//    testCompile.extendsFrom(compileOnly)
//}
//dependencyManagement {
//    imports {
//        mavenBom "org.springframework.cloud:spring-cloud-function-dependencies:3.1.3"
//    }
//}
//test {
//    useJUnitPlatform()
//}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'org.springframework.boot'
//apply plugin: 'org.springframework.boot.experimental.thin-launcher'
apply plugin: 'io.spring.dependency-management'

group = 'com.aws'
version = '1.0.0.RELEASE'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    springCloudFunctionVersion = "3.0.0.BUILD-SNAPSHOT"
    awsLambdaEventsVersion = "2.0.2"
    awsLambdaCoreVersion = "1.1.0"
}
ext['reactor.version'] = "3.1.7.RELEASE"

assemble.dependsOn = [shadowJar]

jar {
    manifest {
        attributes ('Main-Class': 'com.aws.LambdaGradleApplication',
                'Start-Class':'com.aws.LambdaGradleApplication')
    }
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*

shadowJar {
    classifier = 'aws'
    dependencies {
        exclude(
                dependency("org.springframework.cloud:spring-cloud-function-web:3.1.3"))
    }
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

configurations {
    testCompile.extendsFrom(compileOnly)
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-function-dependencies:3.1.3"
    }
}

dependencies {
    implementation "org.springframework.cloud:spring-cloud-function-adapter-aws:3.1.3"
    implementation "org.springframework.cloud:spring-cloud-starter-function-webflux:3.1.3"
    implementation "org.springframework.boot:spring-boot-configuration-processor:2.5.2"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.2'
    compileOnly("com.amazonaws:aws-lambda-java-events:3.9.0")
    compileOnly("com.amazonaws:aws-lambda-java-core:1.2.1")
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'mysql:mysql-connector-java:8.0.24'

}
